
////⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣀⣀⣀⣀⢀⣴⣦⠀⢀⠀⣀⣘⣿⠂⠀⠠⣀⣀⠀⢤⣤⣤⣤⣤⣤⠀⣭⡄⠈⠉⠛⠹⠿⠿⠿⠿⠷⠾⠏⠛⠏⢻⡿⠿⢿⡿⢿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠋⣠⡌⢥⣌⠁⠀⠀⠀⡐⠠⣍⠒⠤⢿⠷⢸⣿⣿⣿⣿⣿⣤⣷⣌⠀⣤⣀⡤⢀⣀⣀⣀⣀⡀⢀⣀⣈⣼⣁⣤⣸⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠃⢀⣐⢰⠾⠋⢠⣤⡴⠞⣛⡛⠀⠸⣷⣾⣿⣿⣦⡑⠈⢿⡿⠿⣿⣿⣿⣿⣿⣿⡯⣿⣿⣿⣥⣥⣿⣈⣽⣸⣭⣭⣬⣭⣭⣽⣿⣿⠀
////⠀⠈⠉⠉⠉⠉⠁⠉⠉⠉⠋⠁⠀⠀⠀⠀⢀⣴⣏⣿⠿⠖⣡⠟⣩⣴⣿⣿⡿⠗⠀⠿⣿⠿⣿⣿⠿⣌⡂⠘⠦⣰⣶⣶⣶⣶⣶⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠛⢡⡆⠀⠂⠀⠡⣾⠿⠿⢋⣥⠆⠀⣶⡀⠹⣆⢻⣿⣷⡜⣿⣷⣄⠹⣿⣿⣿⣿⣿⡇⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⠀⣀⣀⢀⠀⣀⣀⣀⣀⣠⣤⣄⡀⠀⣀⡙⠓⠀⠁⠀⠀⣠⣤⠀⢠⣶⠟⠋⢀⣼⣿⠃⡄⣿⡆⢻⣿⣷⡸⣿⣿⡄⢹⣿⣿⣿⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⢠⣿⠀⠆⠀⠆⠀⣰⡟⠀⣤⡤⠀⢀⣀⣚⡛⠛⣰⣿⢸⣿⠘⣿⣿⡇⢹⣿⡄⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣸⢋⡶⠀⣤⡀⣀⡿⠁⠐⠒⠶⣶⣟⣛⣻⡟⢠⣿⠏⣾⡏⠀⣹⣿⡇⢸⣿⡇⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢀⣿⣸⠃⢸⣿⣧⡿⢧⣷⠠⠀⠀⠀⢌⠙⣿⡇⣿⡿⢠⡿⠁⠆⣿⣿⢣⣾⣿⠇⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠃⠃⠈⣿⣿⠀⠘⣏⠻⠀⠸⣿⣷⣿⣿⣷⣶⣿⣿⣧⠘⢁⣿⠀⠞⣸⡿⢃⡼⣿⣿⠀⠀⠛⠛⠛⠛⠛⠛⠛⠛⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⡆⠀⠀⠀⠀⠀⣶⣶⡶⠶⣶⡀⠀⠸⢻⠀⡀⣌⠛⢇⢱⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⢨⠀⠀⣾⠟⣡⡿⢣⣿⠁⠀⠀⠀⠀⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⠃⠀⠀⠀⠀⣴⢻⣿⣤⣾⣿⣷⡆⠀⠈⠣⠀⢸⣧⠘⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⡼⠋⣰⠞⠁⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⠠⠀⠀⣄⡾⢁⠎⣸⣿⣿⣿⣿⣿⡄⢠⠀⠀⠘⢿⡇⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⣀⣠⣶⣿⠀⠑⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⡆⠀⣰⣿⣷⣟⣰⣿⣿⣿⣿⣿⣿⣿⣴⡀⠀⠀⠈⠇⢸⣷⣌⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⢀⣤⣾⣿⣿⡿⣿⣇⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⡇⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠛⠛⠀⠂⠀⠀⣸⣿⣿⣷⣄⣙⠻⠿⠿⠟⠛⣉⣤⣶⣿⣿⣿⣿⣿⣿⣧⡈⣿⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⠟⣡⣶⣿⣿⣿⣷⣶⣄⡀⠿⢿⣿⣿⣿⣿⣷⡆⠀⠿⠾⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⡇⣿⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣁⣾⣿⣿⣿⣿⣿⣿⡿⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣭⣝⣛⣻⠇⢐⣒⣂⣤⣴⣶⣿⣿⣿⣿⣶⣄⡙⠇⢘⣀⠀⢸⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀ 
////⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⡟⠺⢛⣿⣿⣿⣷⣶⣶⣶⣶⣤⣬⣙⠻⢿⣿⣟⣣⣭⣭⣭⣝⣛⡄⠈⠛⢷⣬⡇⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⠇⣴⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣦⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣌⡙⠇⢸⣿⣿⣿⣿⣿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⡀⢿⣿⣿⣿⣿⣿⣿⡏⢸⣿⣿⣿⣿⣿⣿⣿⣷⡀⢈⣿⣿⣿⣿⣿⣿⣌⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢦⠘⠿⠈⣿⣿⣿⣿⣿⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣧⠸⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⡌⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣦⠀⠀⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢻⣿⣿⣿⣿⣿⡄⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠛⠁⠀⡘⣿⣿⣿⣿⣿⣷⡘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠐⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⡏⠀⠀⠠⠁⢹⣿⣿⣿⣿⣿⣷⡈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⣉⣴⣷⣦⡹⢿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢠⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⡇⠀⠄⠠⠀⠈⣿⣿⣿⣿⣿⣿⡇⢳⣬⣙⠛⠛⠛⠛⣛⣛⣩⣥⣴⣾⣿⣿⣿⣿⣿⣿⣦⡙⠿⣿⣿⣿⣿⣿⡟⢁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣧⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠛⠛⢋⣡⣴⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀
////⣿⣿⣿⣿⣿⣿⣿⠀⠀⢁⠀⠀⠈⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢰⣶⣿⣿⣿⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⣼⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠀⠈⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⡇⠘⣿⣿⣿⣿⡇⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢰⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣶⡀⠁⠛⢋⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣷⠀⠙⣿⣿⣿⡇⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠘⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⡇⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡘⢿⣿⡇⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠁⠀⠈⠂⠀⠀⢀⢰⣿⣿⣿⣿⠏⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡙⠇⢸⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠄⠀⠀⠂⠠⣦⣉⢸⣿⣿⣿⠏⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡘⢿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠀⢸⣃⣰⡷⠉⠁⠈⣿⣿⡏⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⠀⠈⢻⣦⡀⠀⠀⠤⠨⣿⢣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠷⣌⢿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣆⣀⣀⣠⣀⣠⣄⣤⡀⢋⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡸⣄⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⡆⢻⣿⠋⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣰⣿⣿⣿⣿⣿⣿⡆⢻⡆⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣬⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢰⣿⣿⣿⣿⣿⣿⣿⣿⡆⠃⢻⣿⣿⣿⣿⡏⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢸⣿⣿⣿⣿⡇⣿⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡌⢻⣿⣿⣿⣿⣿⣿⣿⣿⡃⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠸⣿⣿⣿⣿⣇⢻⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡘⢿⣿⣿⣿⣿⣿⣿⢃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⡗⠠⠀
////⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢻⣿⣿⣿⣿⡿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣿⣿⣿⣿⣿⣼⠀
////⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠙⣿⣿⠋⠁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⠀
////⣇⠹⣿⣄⠙⢿⣿⣿⣿⠟⠛⠻⣿⣿⡆⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠙⣁⣁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣧⡘⢿⣷⣾⣿⡿⠿⠀⠀⠀⣿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⢿⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
////⣿⣿⣿⣶⣿⣿⣿⣿⠀⠀⠀⡆⣿⣿⣿⣧⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀
//#include <sstream> 
//#include <string> 
//#include <iostream>  // for cin cout
//using namespace std;

//struct stack                 // описание элемента стека
//{
//	char d;
//	stack* p;        // указатель на следующий элемент стека
//};

//void  push1 (stack **top, char d);
//void  vyvod_stack (stack *top);
//int   pop1  (stack **top);

//void main( void )
//{
//	stack *top = NULL;       // top – указатель вершины стека

	
//       push1(&top,);      // добавляем элементы в стек


//	vyvod_stack (top);  // выводим содержимое стека на экран

//	while (top)   
//       cout << pop1(&top) << "  "; // выталкиваем элементы
//                                   // стека



//	vyvod_stack(top);          // проверяем, что стек пуст
//}
 
//// функция занесения элемента в вершину стека  вариант 1
//void push1(stack **top, char d)
//{               //    top – указатель начала стека
//	stack *pv = new stack; // выделение памяти для элемента
//                         // стека
//	pv->d = d;
//	pv->p = *top;  // связываем новый элемент с предыдущим 
//	*top = pv;     // меняем адрес начала стека
//}


//// функция удаления элемента из вершины стека вариант 1
//int pop1(stack **top)
//{                    //    top – указатель начала стека
//	int temp = (*top)->d;
//	stack* pv = *top;
//	*top = (*top)->p;      // меняем адрес начала стека
//	delete pv;             // освобождение памяти 
//	return temp;
//}


 
//// функция  просмотра и вывода элементов стека на экран 
//void vyvod_stack(stack *top)
//{
//	while (top)
//	{
//		cout << top->d << ' ';
//		top = top->p; //переход к следующему элементу стека
//	}
//	cout << "\n";
//}
 
//int str()
//{
//	string str, word, str1;
//	cout << "Enter a string:\n ";
//	getline(cin, str);
//	stringstream in(str);
//	while (in >> word)
//	{
//		if (word.size() == 1)
//			continue;
//		if (word[0] == 'p' && word[1] == 'r')
//			str1 += word + ' ';
//	}
//	cout << str1 << "\n";
//	system("pause");
//	return 0;
//}


//#include <iostream>
//#include <string>
//#include <stack>
//
//using namespace std;
//
//int main()
//{
//    string s;
//    cout << "Enter a string: ";
//    getline(cin, s);
//
//    stack<char> st;
//    for (int i = 0; i < s.length(); i++)
//        st.push(s[i]);
//
//    cout << "Reversed string: ";
//    while (!st.empty())
//    {
//        cout << st.top();
//        st.pop();
//    }
//    cout << endl;
//
//    return 0;
//}
//#include <iostream>
//#include <queue>
//#include <string>

//using namespace std;

//string pr(queue<string>& q) {
//    string result;
//    while (!q.empty()) {
//        string word = q.front();
//        q.pop();
//        if (word[0] == 'pr') {
//            result += word;
//        }
//    }
//    return result;
//}

//int main() {
//    string s;
//    getline(cin, s);
//    queue<string> q;
//    string word;
//    for (int i = 0; i < s.length(); i++) {
//        if (s[i] == ' ') {
//            q.push(word);
//            word = "";
//        }
//        else {
//            word += s[i];
//        }
//    }
//    q.push(word);
//    string result = pr(q);
//    cout << "Result: " << result << endl;
//    return 0;
//}
#include <iostream>
#include <string>
#include <queue>

using namespace std;

string solve(string s)
{
    string result = "";
    queue<string> q;

    // Разбиваем строку на слова и добавляем их в очередь
    string word = "";
    for (char c : s) 
    {
        if (c == ' ')
        {
            q.push(word);
            word = "";
        }
        else
        {
            word += c;
        }
    }
    q.push(word);

    // Извлекаем слова из очереди и добавляем их в результирующую строку, если они начинаются с 'pr'
    while (!q.empty())
    {
        string curr = q.front();
        q.pop();
        if (curr.substr(0, 2) == "pr")
        {
            result += curr + " ";
        }
    }

    return result;
}

int main()
{
    string s;
    getline(cin, s);
    cout << solve(s) << endl;
    return 0;
}